[
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "",
    "text": "Singapore’s demographic profile provides critical insights for policy planning, urban development, and resource allocation. The dataset respopagesex2024.csv contains population counts by age, sex, planning area, and subzone, based on Singapore’s official population statistics for 2024. This research aims to uncover key trends in aging and spatial demographic variations using visual analytics.\n\n\n\nThe dataset used is respopagesex2024.csv obtained from the Department of Statistics Singapore. It includes the following fields:\n\nPA: Planning Area\nSZ: Subzone\nAge: Age in years (0 to 90+)\nSex: Male or Female\nPop: Resident count\nTime: Time / Period\n\n\n\n\n\n\n\nNote\n\n\n\n1) For June 2024, Planning Areas refer to areas demarcated in the Urban Redevelopment Authority's Master Plan 2019. \n2) Data from 2003 onwards exclude residents who have been away from Singapore for a continuous period of 12 months or longer as at the reference period. \n3) The figures have been rounded to the nearest 10. \n4) The data may not add up due to rounding.\n\n\n\n\n\nUsing the Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 dataset, this article aims to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 function to explore:\n\nAreas with pronounced aging patterns and low birth rates\nSpatial variation of age distribution across planning areas and regions"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#background",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "",
    "text": "Singapore’s demographic profile provides critical insights for policy planning, urban development, and resource allocation. The dataset respopagesex2024.csv contains population counts by age, sex, planning area, and subzone, based on Singapore’s official population statistics for 2024. This research aims to uncover key trends in aging and spatial demographic variations using visual analytics."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#the-data",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "",
    "text": "The dataset used is respopagesex2024.csv obtained from the Department of Statistics Singapore. It includes the following fields:\n\nPA: Planning Area\nSZ: Subzone\nAge: Age in years (0 to 90+)\nSex: Male or Female\nPop: Resident count\nTime: Time / Period\n\n\n\n\n\n\n\nNote\n\n\n\n1) For June 2024, Planning Areas refer to areas demarcated in the Urban Redevelopment Authority's Master Plan 2019. \n2) Data from 2003 onwards exclude residents who have been away from Singapore for a continuous period of 12 months or longer as at the reference period. \n3) The figures have been rounded to the nearest 10. \n4) The data may not add up due to rounding."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#research-objectives",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#research-objectives",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "",
    "text": "Using the Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024 dataset, this article aims to use appropriate Exploratory Data Analysis (EDA) methods and ggplot2 function to explore:\n\nAreas with pronounced aging patterns and low birth rates\nSpatial variation of age distribution across planning areas and regions"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-overview",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#dataset-overview",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "3.1 Dataset Overview",
    "text": "3.1 Dataset Overview\n\n\n\n\n\n\nNote\n\n\n\nThis dataset stores “90_and_Over” as a character value in the Age column, we need to clean and convert it to a numeric value to perform age-based analysis. We use 95 as a conservative numeric replacement.\n\n\n\ndata &lt;- read_csv(\"Data/respopagesex2024.csv\") %&gt;%\n  mutate(Age = ifelse(Age == \"90_and_Over\", \"95\", Age),\n         Age = as.numeric(Age)) %&gt;%\n  drop_na(Age)\n\nRows: 60424 Columns: 6\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): PA, SZ, Age, Sex\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe dataset consists of 60,424 rows and 6 columns, representing Singapore’s resident population as of 2024.\nA warning was raised when converting the Age column from character to numeric:\n\n\n\n\n\n\nWarning\n\n\n\nNAs introduced by coercion\n\n\nThis indicates that at least one value in the Age column was non-numeric (e.g., “Total” or “Unknown”), which cannot be coerced to a number and was converted to NA. To ensure accurate analysis, those invalid rows were excluded using drop_na(Age). This step guarantees that only valid age-based population entries are used in further calculations."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#duplicate-check",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#duplicate-check",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "3.2 Duplicate Check",
    "text": "3.2 Duplicate Check\n\nsum(duplicated(data))\n\n[1] 0\n\ndata[duplicated(data), ]\n\n# A tibble: 0 × 6\n# ℹ 6 variables: PA &lt;chr&gt;, SZ &lt;chr&gt;, Age &lt;dbl&gt;, Sex &lt;chr&gt;, Pop &lt;dbl&gt;,\n#   Time &lt;dbl&gt;\n\n\nResult suggests that there are no fully duplicate rows in this dataset.\nAfter cleaning, 60,424 valid records remain for analysis. No duplicate entries were detected. Non-numeric age entries, likely representing summary rows such as ‘Total’, were excluded."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#subzone-summary",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#subzone-summary",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "3.3 Subzone Summary",
    "text": "3.3 Subzone Summary\nThe code chunk below creates a summary table that shows all subzones belonging to each planning area, displayed cleanly using the gt() package for better readability. It’s useful for understanding the structure and granularity of the geographic data.\n\ngrouped &lt;- data %&gt;%\n  select(PA, SZ) %&gt;%\n  distinct() %&gt;%\n  arrange(PA, SZ) %&gt;%\n  group_by(PA) %&gt;%\n  summarise(Subzones = paste(SZ, collapse = \", \"))\n\ngrouped %&gt;%\n  gt() %&gt;%\n  tab_header(\n    title = \"Planning Areas and Their Subzones\"\n  )\n\n\n\n\n\n\n\nPlanning Areas and Their Subzones\n\n\nPA\nSubzones\n\n\n\n\nAng Mo Kio\nAng Mo Kio Town Centre, Cheng San, Chong Boon, Kebun Bahru, Sembawang Hills, Shangri-La, Tagore, Townsville, Yio Chu Kang, Yio Chu Kang East, Yio Chu Kang North, Yio Chu Kang West\n\n\nBedok\nBayshore, Bedok North, Bedok Reservoir, Bedok South, Frankel, Kaki Bukit, Kembangan, Siglap\n\n\nBishan\nBishan East, Marymount, Upper Thomson\n\n\nBoon Lay\nLiu Fang, Samulun, Shipyard, Tukang\n\n\nBukit Batok\nBrickworks, Bukit Batok Central, Bukit Batok East, Bukit Batok South, Bukit Batok West, Gombak, Guilin, Hillview, Hong Kah North\n\n\nBukit Merah\nAlexandra Hill, Alexandra North, Bukit Ho Swee, Bukit Merah, City Terminals, Depot Road, Everton Park, Henderson Hill, Kampong Tiong Bahru, Maritime Square, Redhill, Singapore General Hospital, Telok Blangah Drive, Telok Blangah Rise, Telok Blangah Way, Tiong Bahru, Tiong Bahru Station\n\n\nBukit Panjang\nBangkit, Dairy Farm, Fajar, Jelebu, Nature Reserve, Saujana, Senja\n\n\nBukit Timah\nAnak Bukit, Coronation Road, Farrer Court, Hillcrest, Holland Road, Leedon Park, Swiss Club, Ulu Pandan\n\n\nCentral Water Catchment\nCentral Water Catchment\n\n\nChangi\nChangi Airport, Changi Point, Changi West\n\n\nChangi Bay\nChangi Bay\n\n\nChoa Chu Kang\nChoa Chu Kang Central, Choa Chu Kang North, Keat Hong, Peng Siang, Teck Whye, Yew Tee\n\n\nClementi\nClementi Central, Clementi North, Clementi West, Clementi Woods, Faber, Pandan, Sunset Way, Toh Tuck, West Coast\n\n\nDowntown Core\nAnson, Bayfront Subzone, Bugis, Cecil, Central Subzone, City Hall, Clifford Pier, Marina Centre, Maxwell, Nicoll, Phillip, Raffles Place, Tanjong Pagar\n\n\nGeylang\nAljunied, Geylang East, Kallang Way, Kampong Ubi, Macpherson\n\n\nHougang\nDefu Industrial Park, Hougang Central, Hougang East, Hougang West, Kangkar, Kovan, Lorong Ah Soo, Lorong Halus, Tai Seng, Trafalgar\n\n\nJurong East\nInternational Business Park, Jurong Gateway, Jurong Port, Jurong River, Lakeside (Business), Lakeside (Leisure), Penjuru Crescent, Teban Gardens, Toh Guan, Yuhua East, Yuhua West\n\n\nJurong West\nBoon Lay Place, Chin Bee, Hong Kah, Jurong West Central, Kian Teck, Safti, Taman Jurong, Wenya, Yunnan\n\n\nKallang\nBendemeer, Boon Keng, Crawford, Geylang Bahru, Kallang Bahru, Kampong Bugis, Kampong Java, Lavender, Tanjong Rhu\n\n\nLim Chu Kang\nLim Chu Kang\n\n\nMandai\nMandai East, Mandai Estate, Mandai West\n\n\nMarina East\nMarina East\n\n\nMarina South\nMarina South\n\n\nMarine Parade\nEast Coast, Katong, Marina East (Mp), Marine Parade, Mountbatten\n\n\nMuseum\nBras Basah, Dhoby Ghaut, Fort Canning\n\n\nNewton\nCairnhill, Goodwood Park, Istana Negara, Monk's Hill, Newton Circus, Orange Grove\n\n\nNorth-Eastern Islands\nNorth-Eastern Islands\n\n\nNovena\nBalestier, Dunearn, Malcolm, Moulmein, Mount Pleasant\n\n\nOrchard\nBoulevard, Somerset, Tanglin\n\n\nOutram\nChina Square, Chinatown, Pearl's Hill, People's Park\n\n\nPasir Ris\nFlora Drive, Loyang East, Loyang West, Pasir Ris Central, Pasir Ris Drive, Pasir Ris Park, Pasir Ris Wafer Fab Park, Pasir Ris West\n\n\nPaya Lebar\nAirport Road, Paya Lebar East, Paya Lebar North, Paya Lebar West, Plab\n\n\nPioneer\nBenoi Sector, Gul Basin, Gul Circle, Joo Koon, Pioneer Sector\n\n\nPunggol\nConey Island, Matilda, Northshore, Punggol Canal, Punggol Field, Punggol Town Centre, Waterway East\n\n\nQueenstown\nCommonwealth, Dover, Ghim Moh, Holland Drive, Kent Ridge, Margaret Drive, Mei Chin, National University Of S'pore, One North, Pasir Panjang 1, Pasir Panjang 2, Port, Queensway, Singapore Polytechnic, Tanglin Halt\n\n\nRiver Valley\nInstitution Hill, Leonie Hill, One Tree Hill, Oxley, Paterson\n\n\nRochor\nBencoolen, Farrer Park, Kampong Glam, Little India, Mackenzie, Mount Emily, Rochor Canal, Selegie, Sungei Road, Victoria\n\n\nSeletar\nPulau Punggol Barat, Pulau Punggol Timor, Seletar, Seletar Aerospace Park\n\n\nSembawang\nAdmiralty, Sembawang Central, Sembawang East, Sembawang North, Sembawang Springs, Sembawang Straits, Senoko North, Senoko South, The Wharves\n\n\nSengkang\nAnchorvale, Compassvale, Fernvale, Lorong Halus North, Rivervale, Sengkang Town Centre, Sengkang West\n\n\nSerangoon\nLorong Chuan, Seletar Hills, Serangoon Central, Serangoon Garden, Serangoon North, Serangoon North Ind Estate, Upper Paya Lebar\n\n\nSimpang\nPulau Seletar, Simpang North, Simpang South, Tanjong Irau\n\n\nSingapore River\nBoat Quay, Clarke Quay, Robertson Quay\n\n\nSouthern Islands\nSentosa, Southern Group\n\n\nStraits View\nStraits View\n\n\nSungei Kadut\nGali Batu, Kranji, Pang Sua, Reservoir View, Turf Club\n\n\nTampines\nSimei, Tampines East, Tampines North, Tampines West, Xilin\n\n\nTanglin\nChatsworth, Nassim, Ridout, Tyersall\n\n\nTengah\nBrickland, Forest Hill, Garden, Park, Plantation, Tengah Industrial Estate\n\n\nToa Payoh\nBidadari, Boon Teck, Braddell, Joo Seng, Kim Keat, Lorong 8 Toa Payoh, Pei Chun, Potong Pasir, Sennett, Toa Payoh Central, Toa Payoh West, Woodleigh\n\n\nTuas\nTengeh, Tuas Bay, Tuas North, Tuas Promenade, Tuas View, Tuas View Extension\n\n\nWestern Islands\nJurong Island And Bukom, Semakau, Sudong\n\n\nWestern Water Catchment\nBahar, Cleantech, Murai\n\n\nWoodlands\nGreenwood Park, Midview, North Coast, Senoko West, Woodgrove, Woodlands East, Woodlands Regional Centre, Woodlands South, Woodlands West\n\n\nYishun\nKhatib, Lower Seletar, Nee Soon, Northland, Springleaf, Yishun Central, Yishun East, Yishun South, Yishun West"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-sex-pyramid",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "4.1 Age-Sex Pyramid",
    "text": "4.1 Age-Sex Pyramid\nThis population pyramid visualizes the age and gender distribution. Males are plotted on the left and females on the right, highlighting the dependency load and gender imbalance at older ages.\n\npyramid_data &lt;- data %&gt;%\n  group_by(Age, Sex) %&gt;%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %&gt;%\n  mutate(Pop = if_else(Sex == \"Males\", -Pop, Pop))\n\npyramid_plot &lt;- ggplot(pyramid_data, aes(x = Age, y = Pop, fill = Sex)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_flip() +\n  scale_y_continuous(labels = abs) +\n  labs(title = \"Singapore Resident Population Pyramid (2024)\",\n       x = \"Age\", y = \"Population\") +\n  theme_minimal()\n\npyramid_plot\n\n\n\n\n\n\n\n\nObservations:\n\nA bulge around ages 30–50 suggests a dominant working-age population.\nFemales dominate in ages 80+, reflecting higher life expectancy.\nLower base suggests declining birth rates."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#birth-rate-and-aging-population",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#birth-rate-and-aging-population",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "4.2 Birth Rate and Aging Population",
    "text": "4.2 Birth Rate and Aging Population\nTo better understand the spatial dynamics of population aging, we compared the total population of the young group (aged 0–14) and the aging group (aged 65 and above) across Singapore’s Planning Areas (PAs). This analysis highlights demographic imbalances by region, identifying areas where the elderly population significantly exceeds the youth population, and vice versa.\n\nage_groups &lt;- data %&gt;%\n  filter(Age &lt;= 14 | Age &gt;= 65) %&gt;%\n  mutate(group = case_when(\n    Age &lt;= 14 ~ \"Young\",\n    Age &gt;= 65 ~ \"Aging\"\n  )) %&gt;%\n  group_by(PA, group) %&gt;%\n  summarise(total_pop = sum(Pop), .groups = \"drop\")\n\nggplot(age_groups, aes(x = reorder(PA, -total_pop), y = total_pop, fill = group)) +\n  geom_col(position = \"dodge\") +\n  coord_flip() +\n  labs(title = \"Young vs Aging Population by Planning Area\",\n       x = \"Planning Area\", y = \"Population\", fill = \"Age Group\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nWe refine the visualization by focusing on the top 20 Planning Areas with the highest combined population of young (aged 0–14) and elderly (aged 65 and above) residents. The top_pa object identifies these most populous areas based on total demographic burden, while top_age_groups filters the dataset accordingly to ensure that only these selected Planning Areas are included in the plot for clearer comparison.\n\ntop_pa &lt;- age_groups %&gt;%\n  group_by(PA) %&gt;%\n  summarise(total = sum(total_pop)) %&gt;%\n  arrange(desc(total)) %&gt;%\n  slice_head(n = 20)  # select top 20\n\ntop_age_groups &lt;- age_groups %&gt;%\n  filter(PA %in% top_pa$PA)\n\n# Step 1: Define the order (e.g. by total population descending)\npa_order &lt;- top_age_groups %&gt;%\n  group_by(PA) %&gt;%\n  summarise(total = sum(total_pop)) %&gt;%\n  arrange(desc(total)) %&gt;%\n  pull(PA)\n\n# Step 2: Apply the same factor levels\ntop_age_groups &lt;- top_age_groups %&gt;%\n  mutate(PA = factor(PA, levels = pa_order))\n\nratio_data &lt;- age_groups %&gt;%\n  filter(PA %in% top_pa$PA) %&gt;%\n  pivot_wider(names_from = group, values_from = total_pop) %&gt;%\n  mutate(ratio = Aging / Young) %&gt;%\n  filter(!is.na(PA)) %&gt;%  # Remove NAs\n  mutate(PA = factor(PA, levels = pa_order))\n\n# Top bar chart\nbar_plot &lt;- ggplot(top_age_groups, aes(x = total_pop, y = fct_rev(PA), fill = group)) +\n  geom_col(position = \"dodge\") +\n  labs(x = \"Population\", y = NULL, fill = \"Age Group\") +\n  theme_minimal()\n\n# Bottom line chart with consistent PA order\nline_plot &lt;- ggplot(ratio_data, aes(x = PA, y = ratio)) +\n  geom_point(size = 3, color = \"black\") +\n  geom_line(aes(group = 1), color = \"black\") +\n  labs(x = \"Planning Area\", y = \"Aging / Young Ratio\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Combine them\n(bar_plot / line_plot) + plot_layout(heights = c(2, 1)) +\n  plot_annotation(title = \"Population Distribution and Aging Ratio by Planning Area\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo enlarge the graph for better readability, we can increase the figure width and height:\n\nfig.width=12 → makes the chart wider\nfig.height=8 → gives enough vertical space for stacked or combined plots\n\nBoth plots use consistent PA ordering for easier comparison.\n\n\nAging-Heavy Areas: these planning areas have a high Aging-to-Young ratio, meaning significantly more elderly (65+) than young residents (0–14):\n\nAng Mo Kio has the highest aging ratio (above 2.0) despite moderate total population — indicating a strongly aging population.\nBukit Merah and Queenstown also exhibit high aging ratios with noticeably lower young population bars. These are classic mature estates with older residents aging in place.\nBedok and Toa Payoh show both large elderly populations and high aging ratios.\n\nYouth-Dense Areas:\n\nPunggol has the lowest aging ratio (under 0.5) and a visibly dominant young population bar — a clear sign of a family-oriented, younger estate.\nSengkang and Tampines also have low aging ratios and high young populations, suggesting they are popular for younger families.\nJurong West and Woodlands show balanced profiles but still lean younger compared to the national median."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-distribution-by-region-type",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#age-distribution-by-region-type",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "4.3 Age Distribution by Region Type",
    "text": "4.3 Age Distribution by Region Type\nTo examine regional differences in demographic structure, a boxplot was generated to illustrate the distribution of resident ages across Singapore’s various region types, as defined by their respective Planning Areas.\nThe Urban Authority of Singapore (URA) has categorized Singapore into 5 regions for urban planning purposes, namely Central Region, North Region, North-East Region, East Region and West Region.\nBy aligning Planning Areas with these official region classifications, the analysis enables a clearer understanding of age-related demographic patterns across the island.\n\nexpanded_data &lt;- data %&gt;%\n  filter(!is.na(PA)) %&gt;%\n  mutate(Age = ifelse(Age == \"90_and_Over\", \"95\", Age),\n         Age = as.numeric(Age)) %&gt;%\n  filter(!is.na(Age)) %&gt;%\n  mutate(PA = str_trim(PA)) %&gt;%\n  mutate(region_type = case_when(\n    # Core Central Region\n    PA %in% c(\"Downtown Core\", \"Outram\", \"Sentosa\", \"Rochor\", \"Orchard\", \"Newton\",\n              \"River Valley\", \"Bukit Timah\", \"Holland Road\", \"Tanglin\", \"Novena\", \"Thomson\") ~ \"Core Central Region\",\n    \n    # Rest of Central Region\n    PA %in% c(\"Bishan\", \"Bukit Merah\", \"Geylang\", \"Kallang\", \"Marine Parade\", \"Queenstown\", \"Southern Islands\", \"Toa Payoh\") ~ \"Rest of Central Region\",\n    \n    # North Region\n    PA %in% c(\"Central Water Catchment\", \"Lim Chu Kang\", \"Mandai\", \"Sembawang\", \"Simpang\", \"Sungei Kadut\", \"Woodlands\", \"Yishun\") ~ \"North Region\",\n    \n    # North-East Region\n    PA %in% c(\"Ang Mo Kio\", \"Hougang\", \"North-Eastern Islands\", \"Punggol\", \"Seletar\",\n              \"Sengkang\", \"Serangoon\") ~ \"North-East Region\",\n    \n    # East Region\n    PA %in% c(\"Bedok\", \"Changi\", \"Changi Bay\", \"Paya Lebar\", \"Pasir Ris\", \"Tampines\") ~ \"East Region\",\n    \n    # West Region\n    PA %in% c(\"Bukit Batok\", \"Bukit Panjang\", \"Boon Lay\", \"Pioneer\", \"Choa Chu Kang\", \"Clementi\", \"Jurong East\", \"Jurong West\", \"Tengah\", \"Tuas\", \"Western Islands\", \"Western Water Catchment\") ~ \"West Region\",\n    TRUE ~ NA_character_\n  )) %&gt;%\n  filter(!is.na(region_type)) %&gt;%\n  uncount(weights = Pop)\n  \np1 &lt;- ggplot(expanded_data, aes(x = region_type, y = Age, fill = region_type)) +\n  geom_boxplot() +\n  labs(title = \"Age Distribution by Region Type\", x = \"Region\", y = \"Age\") +\n  theme_minimal() +\n  coord_flip()\n\np2 &lt;- ggplot(expanded_data, aes(x = Age, y = fct_reorder(PA, Age), fill = region_type)) +\n  geom_boxplot() +\n  facet_wrap(~ region_type, scales = \"free_y\") +\n  labs(\n    title = \"Age Distribution by Planning Area and Region\",\n    x = \"Age\",\n    y = \"Planning Area\"\n  ) +\n  theme_minimal()\n\np1 / p2 +\n  plot_annotation(title = \"Overview: Regional and Planning Area Age Distribution\")\n\n\n\n\n\n\n\n\nFrom Age Distribution by Region Type figure, we can observe that overall age distribution is similar. All regions have interquartile ranges (IQRs) roughly between 25 and 65 years. Core Central Region has a slightly wider IQR; median age around mid-40s. East Region has a slightly lower median than others. North Region & North-East Region have similar median and IQR (~25–65), slightly lower upper quartile, possibly reflects more family-centric, middle-aged population. West Region also has a broad IQR with no extreme values. No region shows a highly youth-dominant or elderly-dominant skew in isolation.\nFrom the Age Distribution by Planing Area and Region figure, we can observe notable outlines in the plots.\n\nNorth-East Region – Seletar: Has multiple high outliers (above age 80+), despite a narrow IQR.\nWest Region – Tengah: Displays a string of high outliers, unusually concentrated near 85–90. Tengah is a newly developing area, so this is surprising.\nCore Central Region – Downtown Core, Outram, Newton: Outliers at both very low and very high ages, which reflects age-diverse."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ISSS608-VAA",
    "section": "",
    "text": "Welcome to ISSS608 Visual Analytics and Applications. In this website, you will find my coursework prepared for this course."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "In this exercise, we will explore how to enhance `ggplot2` visualizations using extensions such as `ggrepel`, `patchwork`, `ggthemes`, and `hrbrthemes`.\n\n\nWe begin by loading the necessary libraries using the `pacman` package, which ensures packages are installed before loading them.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse) \n\n\n\n\nThe dataset Exam_data.csv contains scores for primary school students. We import it using read_csv.\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#installing-and-loading-the-required-libraries",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "We begin by loading the necessary libraries using the `pacman` package, which ensures packages are installed before loading them.\n\npacman::p_load(ggrepel, patchwork, \n               ggthemes, hrbrthemes,\n               tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#importing-data",
    "title": "Hands-on Exercise 2",
    "section": "",
    "text": "The dataset Exam_data.csv contains scores for primary school students. We import it using read_csv.\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#base-geom_label-annotation",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#base-geom_label-annotation",
    "title": "Hands-on Exercise 2",
    "section": "2.1 Base geom_label Annotation",
    "text": "2.1 Base geom_label Annotation\nFirst, let’s plot English vs. Maths scores using base ggplot2 annotation with geom_label.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label(aes(label = ID), \n             hjust = .5, \n             vjust = -.5) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n`geom_smooth()` using formula = 'y ~ x'"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#improved-annotation-with-geom_label_repel",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#improved-annotation-with-geom_label_repel",
    "title": "Hands-on Exercise 2",
    "section": "2.2 Improved Annotation with geom_label_repel",
    "text": "2.2 Improved Annotation with geom_label_repel\nThis basic plot uses geom_label, but the labels can overlap. Let’s improve that with geom_label_repel from the ggrepel package.\n\nggplot(data=exam_data, \n       aes(x= MATHS, \n           y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  geom_label_repel(aes(label = ID), \n                   fontface = \"bold\") +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: ggrepel: 317 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#default-theme",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#default-theme",
    "title": "Hands-on Exercise 2",
    "section": "3.1 Default Theme",
    "text": "3.1 Default Theme\nLet’s start with a simple histogram of Maths scores using the default theme_gray.\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  theme_gray() +\n  ggtitle(\"Distribution of Maths scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#applying-theme_economist-from-ggthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#applying-theme_economist-from-ggthemes",
    "title": "Hands-on Exercise 2",
    "section": "3.2 Applying theme_economist from ggthemes",
    "text": "3.2 Applying theme_economist from ggthemes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_economist()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#applying-theme_ipsum-from-hrbrthemes",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#applying-theme_ipsum-from-hrbrthemes",
    "title": "Hands-on Exercise 2",
    "section": "3.3 Applying theme_ipsum from hrbrthemes",
    "text": "3.3 Applying theme_ipsum from hrbrthemes\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customizing-theme_ipsum",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#customizing-theme_ipsum",
    "title": "Hands-on Exercise 2",
    "section": "3.4 Customizing theme_ipsum",
    "text": "3.4 Customizing theme_ipsum\n\nggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  ggtitle(\"Distribution of Maths scores\") +\n  theme_ipsum(axis_title_size = 18,\n              base_size = 15,\n              grid = \"Y\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-the-plots",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#creating-the-plots",
    "title": "Hands-on Exercise 2",
    "section": "4.1 Creating the Plots",
    "text": "4.1 Creating the Plots\n\n4.1.1 Plot 1: Maths Score Histogram\n\np1 &lt;- ggplot(data=exam_data, \n             aes(x = MATHS)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") + \n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of Maths scores\")\n\n\n\n4.1.2 Plot 2: English Score Histogram\n\np2 &lt;- ggplot(data=exam_data, \n             aes(x = ENGLISH)) +\n  geom_histogram(bins=20, \n                 boundary = 100,\n                 color=\"grey25\", \n                 fill=\"grey90\") +\n  coord_cartesian(xlim=c(0,100)) +\n  ggtitle(\"Distribution of English scores\")\n\n\n\n4.1.3 Plot 3: Scatterplot of English vs Maths\n\np3 &lt;- ggplot(data=exam_data, \n             aes(x= MATHS, \n                 y=ENGLISH)) +\n  geom_point() +\n  geom_smooth(method=lm, \n              size=0.5) +  \n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100)) +\n  ggtitle(\"English scores versus Maths scores for Primary 3\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-plots-side-by-side",
    "href": "Hands-on_Ex/Hands-on_Ex02/Hands-on_Ex02.html#combining-two-plots-side-by-side",
    "title": "Hands-on Exercise 2",
    "section": "4.2 Combining Two Plots Side-by-Side",
    "text": "4.2 Combining Two Plots Side-by-Side\n\n4.2.1 Two Plots Side-by-Side\n\np1 + p2\n\n\n\n\n\n\n\n\n\n\n4.2.2 Combining Three Plots\n\n(p1 / p2) | p3\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n4.2.3 Adding Tags to a Composite Figure\n\n((p1 / p2) | p3) + \n  plot_annotation(tag_levels = 'I')\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n4.2.4 Adding an Inset Plot\n\np3 + inset_element(p2, \n                   left = 0.02, \n                   bottom = 0.7, \n                   right = 0.5, \n                   top = 1)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\n\n\n4.2.5 Composite Plot with Theme\n\npatchwork &lt;- (p1 / p2) | p3\npatchwork & theme_economist()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nThis concludes Hands-on Exercise 2. We’ve explored how to annotate, theme, and combine ggplot2 graphics using several powerful R packages."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "To begin this exercise, load the necessary R packages that support interactive and linked visualisations.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse) \n\n\n\n\nWe’ll work with a dataset containing students’ exam scores. This data will be used throughout the exercise to create various visualisations.\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\n\n\n\n\nThis plot introduces basic interactivity where hovering over dots reveals student IDs.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)\n\n\n\n\n\n\n\n\n\n\n\nAdd richer information to tooltips by concatenating ID and class.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\nModify the tooltip appearance using inline CSS.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\nShow aggregate values like mean and SEM with hover feedback.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nReplace the size argument with linewidth ingeom = \"errorbar\"layer to resolve the warning.\nExplanation\n\nsize used to control the thickness of lines in earlier ggplot2 versions.\nSince ggplot2 v3.4.0, size is reserved for point sizes, and linewidth should be used for line thickness to improve clarity and consistency.\n\n\n\n\nHere is the corrected version of the code:\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n)\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nClicking a dot opens a URL with more student information.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\nSynchronise hover effects across multiple views using shared IDs.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       ) \n\n\n\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\n“No trace type specified” mean we didn’t specify what kind of plot we want, but since we gave x and y, it will assume we want a scatter plot. By default, it chooses type = 'scatter'.\n\n“No scatter mode specified: Setting the mode to markers”means a scatter plot can have different “modes”, such as:\n\nmode = ‘markers’ → only dots\nmode = ‘lines’ → connected lines\nmode = ‘lines+markers’ → both dots and lines\nSince we didn’t specify a mode, Plotly chose: mode = 'markers' (i.e. dots only)\n\n\n\n\nIf we want to be more explicit, here is the code:\n\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH, \n        type = 'scatter', \n        mode = 'markers')\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\nSimilar to the note of previous code chunk, we can specify the trace type and mode to be more explicit:\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE,\n        type = 'scatter', \n        mode = 'markers')\n\n\n\n\n\n\n\n\nConvert existing ggplot2 objects into interactive plots.\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nHighlight observations across multiple charts using highlight_key() and subplot().\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))\n\n\n\n\n\n\n\n\n\n\n\nRender a searchable, sortable, compact datatable using DT.\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\nLink DT tables and plots interactively using the crosstalk framework.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "To begin this exercise, load the necessary R packages that support interactive and linked visualisations.\n\npacman::p_load(ggiraph, plotly, \n               patchwork, DT, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-data",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "We’ll work with a dataset containing students’ exam scores. This data will be used throughout the exercise to create various visualisations.\n\nexam_data &lt;- read_csv(\"Data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-visualisation-with-ggiraph",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-visualisation-with-ggiraph",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "This plot introduces basic interactivity where hovering over dots reveals student IDs.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = ID),\n    stackgroups = TRUE, \n    binwidth = 1, \n    method = \"histodot\") +\n  scale_y_continuous(NULL, \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 6,\n  height_svg = 6*0.618\n)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#section",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#section",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Add richer information to tooltips by concatenating ID and class.\n\nexam_data$tooltip &lt;- c(paste0(     \n  \"Name = \", exam_data$ID,         \n  \"\\n Class = \", exam_data$CLASS)) \n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(\n    aes(tooltip = exam_data$tooltip), \n    stackgroups = TRUE,\n    binwidth = 1,\n    method = \"histodot\") +\n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(\n  ggobj = p,\n  width_svg = 8,\n  height_svg = 8*0.618\n)\n\n\n\n\n\n\n\n\nModify the tooltip appearance using inline CSS.\n\ntooltip_css &lt;- \"background-color:white; #&lt;&lt;\nfont-style:bold; color:black;\" #&lt;&lt;\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = ID),                   \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(    #&lt;&lt;\n    opts_tooltip(    #&lt;&lt;\n      css = tooltip_css)) #&lt;&lt;\n)                                        \n\n\n\n\n\n\n\n\nShow aggregate values like mean and SEM with hover feedback.\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, size = 0.2\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nReplace the size argument with linewidth ingeom = \"errorbar\"layer to resolve the warning.\nExplanation\n\nsize used to control the thickness of lines in earlier ggplot2 versions.\nSince ggplot2 v3.4.0, size is reserved for point sizes, and linewidth should be used for line thickness to improve clarity and consistency.\n\n\n\n\nHere is the corrected version of the code:\n\ntooltip &lt;- function(y, ymax, accuracy = .01) {\n  mean &lt;- scales::number(y, accuracy = accuracy)\n  sem &lt;- scales::number(ymax - y, accuracy = accuracy)\n  paste(\"Mean maths scores:\", mean, \"+/-\", sem)\n}\n\ngg_point &lt;- ggplot(data=exam_data, \n                   aes(x = RACE),\n) +\n  stat_summary(aes(y = MATHS, \n                   tooltip = after_stat(  \n                     tooltip(y, ymax))),  \n    fun.data = \"mean_se\", \n    geom = GeomInteractiveCol,  \n    fill = \"light blue\"\n  ) +\n  stat_summary(aes(y = MATHS),\n    fun.data = mean_se,\n    geom = \"errorbar\", width = 0.2, linewidth = 0.2\n)\n\ngirafe(ggobj = gg_point,\n       width_svg = 8,\n       height_svg = 8*0.618)\n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(           \n    aes(data_id = CLASS),             \n    stackgroups = TRUE,               \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618                      \n)                                        \n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nImplement visual effects such as highlighting and opacity change on hover.\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(tooltip = CLASS, \n        data_id = CLASS),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618,\n  options = list(                        \n    opts_hover(css = \"fill: #202020;\"),  \n    opts_hover_inv(css = \"opacity:0.2;\") \n  )                                        \n)                                        \n\n\n\n\n\n\n\n\nClicking a dot opens a URL with more student information.\n\nexam_data$onclick &lt;- sprintf(\"window.open(\\\"%s%s\\\")\",\n\"https://www.moe.gov.sg/schoolfinder?journey=Primary%20school\",\nas.character(exam_data$ID))\n\np &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(onclick = onclick),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +               \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\ngirafe(                                  \n  ggobj = p,                             \n  width_svg = 6,                         \n  height_svg = 6*0.618)                                        \n\n\n\n\n\n\n\n\nSynchronise hover effects across multiple views using shared IDs.\n\np1 &lt;- ggplot(data=exam_data, \n       aes(x = MATHS)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") +  \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\np2 &lt;- ggplot(data=exam_data, \n       aes(x = ENGLISH)) +\n  geom_dotplot_interactive(              \n    aes(data_id = ID),              \n    stackgroups = TRUE,                  \n    binwidth = 1,                        \n    method = \"histodot\") + \n  coord_cartesian(xlim=c(0,100)) + \n  scale_y_continuous(NULL,               \n                     breaks = NULL)\n\ngirafe(code = print(p1 + p2), \n       width_svg = 6,\n       height_svg = 3,\n       options = list(\n         opts_hover(css = \"fill: #202020;\"),\n         opts_hover_inv(css = \"opacity:0.2;\")\n         )\n       )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-visualisation-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#interactive-visualisation-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "plot_ly(data = exam_data, \n             x = ~MATHS, \n             y = ~ENGLISH)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\n“No trace type specified” mean we didn’t specify what kind of plot we want, but since we gave x and y, it will assume we want a scatter plot. By default, it chooses type = 'scatter'.\n\n“No scatter mode specified: Setting the mode to markers”means a scatter plot can have different “modes”, such as:\n\nmode = ‘markers’ → only dots\nmode = ‘lines’ → connected lines\nmode = ‘lines+markers’ → both dots and lines\nSince we didn’t specify a mode, Plotly chose: mode = 'markers' (i.e. dots only)\n\n\n\n\nIf we want to be more explicit, here is the code:\n\nplot_ly(data = exam_data, \n        x = ~MATHS, \n        y = ~ENGLISH, \n        type = 'scatter', \n        mode = 'markers')\n\n\n\n\n\n\n\n\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE)\n\nNo trace type specified:\n  Based on info supplied, a 'scatter' trace seems appropriate.\n  Read more about this trace type -&gt; https://plotly.com/r/reference/#scatter\n\n\nNo scatter mode specifed:\n  Setting the mode to markers\n  Read more about this attribute -&gt; https://plotly.com/r/reference/#scatter-mode\n\n\n\n\n\n\nSimilar to the note of previous code chunk, we can specify the trace type and mode to be more explicit:\n\nplot_ly(data = exam_data, \n        x = ~ENGLISH, \n        y = ~MATHS, \n        color = ~RACE,\n        type = 'scatter', \n        mode = 'markers')\n\n\n\n\n\n\n\n\nConvert existing ggplot2 objects into interactive plots.\n\np &lt;- ggplot(data=exam_data, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nggplotly(p)\n\n\n\n\n\n\n\n\nHighlight observations across multiple charts using highlight_key() and subplot().\n\nd &lt;- highlight_key(exam_data)\np1 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = ENGLISH)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\np2 &lt;- ggplot(data=d, \n            aes(x = MATHS,\n                y = SCIENCE)) +\n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\nsubplot(ggplotly(p1),\n        ggplotly(p2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#crosstalk-and-dt",
    "title": "Hands-on Exercise 3",
    "section": "",
    "text": "Render a searchable, sortable, compact datatable using DT.\n\nDT::datatable(exam_data, class= \"compact\")\n\n\n\n\n\n\n\n\nLink DT tables and plots interactively using the crosstalk framework.\n\nd &lt;- highlight_key(exam_data) \np &lt;- ggplot(d, \n            aes(ENGLISH, \n                MATHS)) + \n  geom_point(size=1) +\n  coord_cartesian(xlim=c(0,100),\n                  ylim=c(0,100))\n\ngg &lt;- highlight(ggplotly(p),        \n                \"plotly_selected\")  \n\ncrosstalk::bscols(gg,               \n                  DT::datatable(d), \n                  widths = 5)        \n\nSetting the `off` event (i.e., 'plotly_deselect') to match the `on` event (i.e., 'plotly_selected'). You can change this default via the `highlight()` function."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#getting-started-1",
    "title": "Hands-on Exercise 3",
    "section": "2.1 Getting Started",
    "text": "2.1 Getting Started\nLoading the R packages\n\npacman::p_load(readxl, gifski, gapminder,\n               plotly, gganimate, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#importing-the-data",
    "title": "Hands-on Exercise 3",
    "section": "2.2 Importing the data",
    "text": "2.2 Importing the data\nLoad population data from Excel and prepare it for time-series animation.\n\ncol &lt;- c(\"Country\", \"Continent\")\nglobalPop &lt;- read_xls(\"Data/GlobalPopulation.xls\",\n                      sheet=\"Data\") %&gt;%\n  mutate(across(col, as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(col, as.factor)`.\nCaused by warning:\n! Using an external vector in selections was deprecated in tidyselect 1.1.0.\nℹ Please use `all_of()` or `any_of()` instead.\n  # Was:\n  data %&gt;% select(col)\n\n  # Now:\n  data %&gt;% select(all_of(col))\n\nSee &lt;https://tidyselect.r-lib.org/reference/faq-external-vector.html&gt;.\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nWe’re getting the above warning because we’re passing an external character vector col directly into across(), which uses tidyselect under the hood — and tidyselect no longer allows that syntax.\nSolution:\n\nUse all_of() inside across()\nConvert “Country” and “Continent” to factor (explicitly and correctly).\nConvert “Year” column to integer.\n\n\n\n\nUpdated code chunk:\n\ncol &lt;- c(\"Country\", \"Continent\")\n\nglobalPop &lt;- read_xls(\"Data/GlobalPopulation.xls\",\n                      sheet = \"Data\") %&gt;%\n  mutate(across(all_of(col), as.factor)) %&gt;%\n  mutate(Year = as.integer(Year))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-visualisation-with-gganimate",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-visualisation-with-gganimate",
    "title": "Hands-on Exercise 3",
    "section": "2.3 Animated Visualisation with gganimate",
    "text": "2.3 Animated Visualisation with gganimate\n\n2.3.1 Building a static population bubble plot\nCreate a base plot using geom_point() with aesthetic mappings.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') \n\n\n\n\n\n\n\n\n\n\n2.3.2 Animated Plot\nUse transition_time() and ease_aes() to animate transitions over time.\n\nggplot(globalPop, aes(x = Old, y = Young, \n                      size = Population, \n                      colour = Country)) +\n  geom_point(alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(title = 'Year: {frame_time}', \n       x = '% Aged', \n       y = '% Young') +\n  transition_time(Year) +       \n  ease_aes('linear')"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-visualisation-with-plotly",
    "href": "Hands-on_Ex/Hands-on_Ex03/Hands-on_Ex03.html#animated-visualisation-with-plotly",
    "title": "Hands-on Exercise 3",
    "section": "2.4 Animated Visualisation with plotly",
    "text": "2.4 Animated Visualisation with plotly\n\n2.4.1 Using ggplotly()\nConvert animated ggplot objects to interactive plotly charts.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7, \n             show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7, :\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe first warning we’re getting: Ignoring unknown aesthetics: frame is because frame is not a valid aesthetic in ggplot2::geom_point() — it only works in Plotly when building animations.\nSolution: Use plotly::plot_ly() directly for animations instead of ggplot2::ggplot()\nThe second warning”Warning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to replace is not a multiple of replacement length” happens because ggplotly() tries to generate frames from ggplot object, but it has no built-in animation logic, and frame was misused in the aes() mapping. So plotly’s frame structure is broken or inconsistent.\n\n\n\nWe can use the code chunk below to get an interactive static bubble chart:\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(alpha = 0.7, show.legend = FALSE) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young')\n\nggplotly(gg)\n\n\n\n\n\nFor animated version, we can switch to plotly::plot_ly()\n\nplot_ly(globalPop,\n        x = ~Old,\n        y = ~Young,\n        size = ~Population,\n        color = ~Country,\n        frame = ~Year,\n        text = ~paste(\"Country:\", Country, \"&lt;br&gt;Year:\", Year, \"&lt;br&gt;Pop:\", Population),\n        type = 'scatter',\n        mode = 'markers',\n        sizes = c(10, 80)) %&gt;%\n  layout(xaxis = list(title = \"% Aged\"),\n         yaxis = list(title = \"% Young\"))\n\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): n too large, allowed maximum for palette Set2 is 8\nReturning the palette you asked for with that many colors\n\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\n2.4.2 Fix Display Issues\nFix layout issues and hide unnecessary legends to clean up the output.\n\ngg &lt;- ggplot(globalPop, \n       aes(x = Old, \n           y = Young, \n           size = Population, \n           colour = Country)) +\n  geom_point(aes(size = Population,\n                 frame = Year),\n             alpha = 0.7) +\n  scale_colour_manual(values = country_colors) +\n  scale_size(range = c(2, 12)) +\n  labs(x = '% Aged', \n       y = '% Young') + \n  theme(legend.position='none')\n\nWarning in geom_point(aes(size = Population, frame = Year), alpha = 0.7):\nIgnoring unknown aesthetics: frame\n\nggplotly(gg)\n\nWarning in p$x$data[firstFrame] &lt;- p$x$frames[[1]]$data: number of items to\nreplace is not a multiple of replacement length\n\n\n\n\n\n\n\n\n2.4.3 Directly with plot_ly()\nUse plot_ly() directly to generate a bubble chart animated by year.\n\nbp &lt;- globalPop %&gt;%\n  plot_ly(x = ~Old, \n          y = ~Young, \n          size = ~Population, \n          color = ~Continent,\n          sizes = c(2, 100),\n          frame = ~Year, \n          text = ~Country, \n          hoverinfo = \"text\",\n          type = 'scatter',\n          mode = 'markers'\n          ) %&gt;%\n  layout(showlegend = FALSE)\nbp\n\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\nWarning: `line.width` does not currently support multiple values.\n\n\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nWe’re seeing the repeated warning: Warning: line.width does not currently support multiple values.because Plotly is being asked to apply multiple line.width values (likely per-frame or per-point), but that property doesn’t support vectors — it expects a single value.\nWhen using plot_ly() with frame = ~Year (i.e., animation), each frame is a separate trace, and Plotly internally tries to apply styling (like line.width) across frames. If the dataset has more than one entry per frame, and it tries to assign a vector of widths, this warning appears.\nHowever — we’re not explicitly using line.width in the code, so it’s likely being set implicitly, possibly by an old or incompatible version of Plotly R or from system styles.\n\n\n\nWe can explicitly define both marker and symbol in the plot, and remove size = ~Population from the main aesthetic — instead, control it entirely inside marker.\n\nlibrary(plotly)\n\nbp &lt;- plot_ly(globalPop,\n        x = ~Old,\n        y = ~Young,\n        frame = ~Year,\n        text = ~paste(\"Country:\", Country, \"&lt;br&gt;Population:\", Population),\n        hoverinfo = \"text\",\n        type = \"scatter\",\n        mode = \"markers\",\n        color = ~Continent,\n        marker = list(\n          sizemode = \"area\",\n          sizeref = 2 * max(globalPop$Population, na.rm = TRUE) / (100^2),\n          size = ~Population,\n          line = list(width = 1)\n        ),\n        showlegend = FALSE\n) %&gt;%\n  layout(\n    xaxis = list(title = \"% Aged\"),\n    yaxis = list(title = \"% Young\")\n  )\n\nbp"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)\n\n\n\n\n\nexam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#install-and-launching-r-packages",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if tidyverse packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "href": "Hands-on_Ex/Hands-on_Ex01/Hands-on_Ex01.html#importing-the-data",
    "title": "Hands-on Exercise 1",
    "section": "",
    "text": "exam_data &lt;- read_csv(\"data/Exam_data.csv\")\n\nRows: 322 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): ID, CLASS, GENDER, RACE\ndbl (3): ENGLISH, MATHS, SCIENCE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aging-structure-across-planning-areas",
    "href": "Take-home_Ex/Take-home_Ex01/Take-home_Ex01.html#aging-structure-across-planning-areas",
    "title": "Take-home Exercise 1 - Understanding Singapore’s Demographic Landscape: Population Age Structure and Spatial Patterns in 2024",
    "section": "4.2 Aging Structure Across Planning Areas",
    "text": "4.2 Aging Structure Across Planning Areas\nTo better understand the spatial dynamics of population aging, we compared the total population of the young group (aged 0–14) and the aging group (aged 65 and above) across Singapore’s Planning Areas (PAs). This analysis highlights demographic imbalances by region, identifying areas where the elderly population significantly exceeds the youth population, and vice versa.\n\nage_groups &lt;- data %&gt;%\n  filter(Age &lt;= 14 | Age &gt;= 65) %&gt;%\n  mutate(group = case_when(\n    Age &lt;= 14 ~ \"Young\",\n    Age &gt;= 65 ~ \"Aging\"\n  )) %&gt;%\n  group_by(PA, group) %&gt;%\n  summarise(total_pop = sum(Pop), .groups = \"drop\")\n\nggplot(age_groups, aes(x = reorder(PA, -total_pop), y = total_pop, fill = group)) +\n  geom_col(position = \"dodge\") +\n  coord_flip() +\n  labs(title = \"Young vs Aging Population by Planning Area\",\n       x = \"Planning Area\", y = \"Population\", fill = \"Age Group\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nWe refine the visualization by focusing on the top 20 Planning Areas with the highest combined population of young (aged 0–14) and elderly (aged 65 and above) residents. The top_pa object identifies these most populous areas based on total demographic burden, while top_age_groups filters the dataset accordingly to ensure that only these selected Planning Areas are included in the plot for clearer comparison.\n\ntop_pa &lt;- age_groups %&gt;%\n  group_by(PA) %&gt;%\n  summarise(total = sum(total_pop)) %&gt;%\n  arrange(desc(total)) %&gt;%\n  slice_head(n = 20)  # select top 20\n\ntop_age_groups &lt;- age_groups %&gt;%\n  filter(PA %in% top_pa$PA)\n\n# Define the order (e.g. by total population descending)\npa_order &lt;- top_age_groups %&gt;%\n  group_by(PA) %&gt;%\n  summarise(total = sum(total_pop)) %&gt;%\n  arrange(desc(total)) %&gt;%\n  pull(PA)\n\n# Apply the same factor levels\ntop_age_groups &lt;- top_age_groups %&gt;%\n  mutate(PA = factor(PA, levels = pa_order))\n\nratio_data &lt;- age_groups %&gt;%\n  filter(PA %in% top_pa$PA) %&gt;%\n  pivot_wider(names_from = group, values_from = total_pop) %&gt;%\n  mutate(ratio = Aging / Young) %&gt;%\n  filter(!is.na(PA)) %&gt;%  # Remove NAs\n  mutate(PA = factor(PA, levels = pa_order))\n\n# Top bar chart\nbar_plot &lt;- ggplot(top_age_groups, aes(x = total_pop, y = fct_rev(PA), fill = group)) +\n  geom_col(position = \"dodge\") +\n  labs(x = \"Population\", y = NULL, fill = \"Age Group\") +\n  theme_minimal()\n\n# Bottom line chart with consistent PA order\nline_plot &lt;- ggplot(ratio_data, aes(x = PA, y = ratio)) +\n  geom_point(size = 3, color = \"black\") +\n  geom_line(aes(group = 1), color = \"black\") +\n  labs(x = \"Planning Area\", y = \"Aging / Young Ratio\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n# Combine them\n(bar_plot / line_plot) + plot_layout(heights = c(2, 1)) +\n  plot_annotation(title = \"Population Distribution and Aging Ratio by Planning Area\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\nTo enlarge the graph for better readability, we can increase the figure width and height:\n\nfig.width=12 → makes the chart wider\nfig.height=8 → gives enough vertical space for stacked or combined plots\n\nBoth plots use consistent PA ordering for easier comparison.\n\n\nAging-Heavy Areas: these planning areas have a high Aging-to-Young ratio, meaning significantly more elderly (65+) than young residents (0–14):\n\nAng Mo Kio has the highest aging ratio (above 2.0) despite moderate total population — indicating a strongly aging population.\nBukit Merah and Queenstown also exhibit high aging ratios with noticeably lower young population bars. These are classic mature estates with older residents aging in place.\nBedok and Toa Payoh show both large elderly populations and high aging ratios.\n\nYouth-Dense Areas:\n\nPunggol has the lowest aging ratio (under 0.5) and a visibly dominant young population bar — a clear sign of a family-oriented, younger estate.\nSengkang and Tampines also have low aging ratios and high young populations, suggesting they are popular for younger families.\nJurong West and Woodlands show balanced profiles but still lean younger compared to the national median."
  }
]